name: Deploy references.toml
on:
  push:
#    branches:
#      - main
#    paths:
#      - 'references.py'

jobs:
  make_matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set_matrix.outputs.matrix }}
    env:
      REFERENCES_PREFIX: gs://cpg-reference-test
    steps:
      - name: "Checkout repo"
        uses: actions/checkout@v2

      - name: "Checkout revision before change"
        uses: actions/checkout@v2
        with:
          python-version: '3.11'
          ref: ${{ github.event.before }}
          path: 'before'

      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - run: mv before/references.py references_before.py

      - name: "Set matrix"
        id: set_matrix
        run:
          python prep_matrix.py > matrix.txt
          echo "matrix=${ cat matrix.txt }" >> $GITHUB_OUTPUT
 
  transfer:
    runs-on: ubuntu-latest
    needs:
      - make_matrix
    strategy:
      matrix: ${{ fromJson(needs.make_matrix.outputs.matrix) }}
    env:
      CLOUDSDK_CORE_DISABLE_PROMPTS: 1
      PROJECT: 'cpg-common'
      REFERENCES_PREFIX: gs://cpg-reference-test
    steps:
      - name: "checkout repo"
        uses: actions/checkout@v2

      - name: "gcloud setup"
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: analysis-runner
          service_account_key: ${{ secrets.GCP_SERVER_DEPLOY_KEY }}

      - name: "transfer data"
        run: |
          if [[ "${{ matrix.type }}" == "gcs" ]] ; then
            gsutil -u ${PROJECT} -m rsync -d -r ${{ matrix.src }} ${{ matrix.dst }}
          elif [[ "${{ matrix.type }}" == "https" ]] ; then ]]
            curl ${{ matrix.src }} -o tmp
            gsutil -u ${PROJECT} cp tmp ${{ matrix.dst }}
          fi

  deploy_config:
    runs-on: ubuntu-latest
    needs:
      - transfer
    env:
      CLOUDSDK_CORE_DISABLE_PROMPTS: 1
      CONFIG_DESTINATION: gs://cpg-config/templates
    steps:
      - name: "checkout repo"
        uses: actions/checkout@v2

      - name: "gcloud setup"
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: analysis-runner
          service_account_key: ${{ secrets.GCP_SERVER_DEPLOY_KEY }}

      - name: "prepare config"
        uses: jannekem/run-python-script-action@v1
        with:
          script: |
            import toml, os 
            from os.path import join
            from references import SOURCES, GENOME_BUILD
            d = {'genome_build': GENOME_BUILD}
            for source in SOURCES:
                dst_path = join(PREFIX, source.dst)
                if not source.files:
                    d[source.name] = str(dst_path)
                else:
                    d[source.name] = {
                        k: join(dst_path, suffix)
                        for k, suffix in source.files.items()
                    }
            tomllib.dump({'references': d}, open('references.toml', 'wb')}

      - name: "deploy config toml"
        run: |
          gcloud storage cp references.toml \
            ${CONFIG_DESTINATION}/references/references.toml
